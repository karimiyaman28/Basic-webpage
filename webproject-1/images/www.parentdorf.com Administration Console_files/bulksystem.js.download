class bulkSystem{
    constructor(options){
        this.setDefaults(options);
    }

    setDefaults(options){
        var that = this;

        var defaults = {
            params:{},
            totalBulk:0,
            currentBulkPosition:1,
            batchAmount:1,
            errors:0,
            errorResponse:[],
            successful:0,
            bulkAjaxUrl:"",
            setBulkMessage:function(){
                return 'Please wait a moment while your request processing Bulk # '+that.currentBulkPosition+' of '+that.totalBulk;
            },
            bulkTitle:"Processing...",
            setBulkCompleteMessage:function(){
                return 'Bulk Was Completed.<br> Total of successful bulks : '+that.successful+'<br> Total of bulks : '+that.totalBulk;
            },
            bulkCompleteTitle:"Success",
            bulkCompleteType:"success",
            bulkCompleteCloseText:"Close Window",
            triggerNode:{},
            triggerTitle:"Bulk Action",
            triggerTitleMessage:"Are you sure to run this bulk?",
            triggerType:"warning",
            triggerConfirmText:"Yes, Continue",
            triggerCancelText:"No, Cancel",
            completed:function(){
                location.reload();
            },
            onBulkResponse:function(that,response){
                if(response != undefined && 'status' in response && response.status == "success"){
                    that.successful++;
                }else{
                    that.errors++;
                }

                that.currentBulkPosition += that.batchAmount;
                that.bulk();
            }
        };

        if($.isEmptyObject(defaults) == false){
            $.each( defaults, function( key, value ) {
                that[''+key+''] = value;
            });
        }

        if($.isEmptyObject(options) == false){
            $.each( options, function( key, value ) {
                that[key] = value;
            });
        }

        this.__bindBulk();
    }

    __bindBulk(){
        var that = this;
        if($.isEmptyObject(this.triggerNode) == false){
            $(this.triggerNode).on('click',function(event){
                event.preventDefault();
                that.__triggerSwal();
            });
        }
    }

    __buildParams(){
        var that = this;
        if($.isEmptyObject(that) == false){
            $.each( that, function( key, value ) {
                that[key] = value;
                if(key != 'params' && typeof value != 'function'){
                    that.params[key]  = value;
                }
            });
        }
    }

    __triggerSwal(){
        var that = this;
        swal({
                title: that.triggerTitle,
                html: that.triggerTitleMessage,
                type: that.triggerType,
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: that.triggerConfirmText,
                cancelButtonText: that.triggerCancelText,
                allowEscapeKey: false,
                allowOutsideClick: false,
                closeOnConfirm: false,
                closeOnCancel: true
            },
            function(isConfirm){
                if (isConfirm){
                    that.runBulk();
                }
            });
    }

    bulk(){
        if(this.currentBulkPosition <= this.totalBulk){
            this.runBulk();
        }else{
            this.currentBulkPosition    = 1;
            var that                    = this;
            swal({
                    type: that.bulkCompleteType,
                    title: that.bulkCompleteTitle,
                    html: that.setBulkCompleteMessage(),
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    cancelButtonText: that.bulkCompleteCloseText,
                    allowEscapeKey: false,
                    allowOutsideClick: false,
                    showConfirmButton: false,
                },
                function(isConfirm){
                    that.completed();
                });
        }
    }

    runBulk(){
        var that = this;

        swal({
            showCancelButton:   false,
            showConfirmButton:  false,
            closeOnConfirm:     true,
            allowOutsideClick:  false,
            allowEscapeKey:     false,
            imageUrl:           '//www.securemypayment.com/directory/cdn/images/bars-loading.gif',
            title:              that.bulkTitle,
            html:               that.setBulkMessage()
        });

        console.log(this);

        this.__buildParams();
        var params                  = this.params;
        params['request_type']      = "POST";
        params['header_type']       = "json";

        $.ajax({
            url: that.bulkAjaxUrl,
            type: "post",
            dataType: "json",
            data: params,
            success: function(response){
                that.onBulkResponse(that,response);
            },error: function(e){
                that.bulk();
            }
        });
    }
}

var bulkBD = function(options){
    return new bulkSystem(options);
}